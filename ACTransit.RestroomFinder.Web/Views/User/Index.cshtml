@using ACTransit.RestroomFinder.Web.Infrastructure
@using ACTransit.RestroomFinder.Web.Models

@model X.PagedList.IPagedList<ACTransit.RestroomFinder.Domain.Dto.User>

@using X.PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<style>
    th {
        width: 350px;
        white-space: nowrap;
    }

    .worktable {
        height: 500px;
        display: block;
        overflow-y: auto;
        padding: 0;
    }

    input[type=text] {
        box-sizing: border-box;
        border-radius: 4px;
        background-color: white;
        background-image: url('./content/images/searchicon.png');
        background-position: 1px 0px;
        background-repeat: no-repeat;
        padding-left: 25px;
        width: 150px;
    }

    select {
        box-sizing: border-box;
        border-radius: 4px;
    }

    #search-panel-user .accordion-toggle:after {
        font-family: 'Glyphicons Halflings';
        content: "\e113";
        float: left;
        color: black;
        margin-right: 4px;
        font-size: large;
    }

    #search-panel-user .accordion-toggle.collapsed:after {
        content: "\e114";
    }
</style>

@{
    ViewBag.Title = "Manage Users";

    var userIsAdmin = TokenAuthorizationHelper.HasAccess(TokenAuthorizationHelper.TokenAdmin);
    var userCanEdit = userIsAdmin || TokenAuthorizationHelper.HasAccess(TokenAuthorizationHelper.TokenApplicationAccessEditor);
}

<h2>Manage Users</h2>

<br />

<div id="HeaderOptions">

    <div id="SearchPanelGroup" class="panel-group col-md-10" style="padding: 0;">
        <div class="panel panel-default" style="padding: 0;">
            <div id="search-panel-user" class="panel-heading">
                <h4 class="panel-title">
                    <a class="accordion-toggle collapsed" data-toggle="collapse" href="#SearchPanel" style="text-decoration: none;">Search Options</a>
                </h4>
            </div>
            <div id="SearchPanel" class="panel-collapse collapse">
                <div>
                    <br />
                </div>
                @using (Html.BeginForm("Index", "User", FormMethod.Get, new { id = "SearchForm" }))
                {
                    @Html.AntiForgeryToken()
                    <p>
                        &nbsp;Badge:&nbsp;@Html.TextBox("SearchBadge", ViewBag.SearchBadge as string)
                        &nbsp;Status:&nbsp;@Html.DropDownList("ShowActive", new SelectList(RestroomViewModel.SearchStatuses, "Value", "Text"))
                        @Html.Hidden("Page", ViewBag.Page as int?)
                        @Html.Hidden("SortField", ViewBag.SortField as string)
                        @Html.Hidden("SortDirection", ViewBag.SortDirection as string)
                        &nbsp;<input type="submit" value="Search" class="btn btn-primary" onclick="$('#Page').val('');" />
                        &nbsp;<input type="submit" value="Reset Search" class="btn btn-primary" onclick="resetForm($('#SearchForm'), 'Badge');" />
                    </p>
                }
            </div>
        </div>
    </div>
</div>

<br />

<div class="row">

    <div class="col-md-12">

        <table class="table table-striped table-bordered worktable">
            <tr>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="Name" class="sortable">User</a>
                </th>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="PreferredPhone" class="sortable">Phone</a>
                </th>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="UserDescription" class="sortable">Description</a>
                </th>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="NumberOfActiveDevices" class="sortable"># of Active Devices</a>
                </th>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="LastLogon" class="sortable">Last Logon</a>
                </th>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="DeviceModel" class="sortable">Last Logon Device</a>
                </th>
                <th>
                    <div class="glyphicon glyphicon-sort"></div>
                    <a href="#" data-sortfield="UserActive" class="sortable">Active</a>
                </th>
                <th>
                    Action
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @($"{Html.DisplayFor(modelItem => item.Name)} ({Html.DisplayFor(modelItem => item.Badge)}) {(string.IsNullOrEmpty(item.JobTitle) ? string.Empty : $"- {item.JobTitle}")}")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        <a href="UserDevice?SearchBadge=@item.Badge&ShowActive=All">@Html.DisplayFor(modelItem => item.NumberOfActiveDevices)</a>

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastLogon)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastLogonDeviceModel) - @Html.DisplayFor(modelItem => item.LastLogonDeviceOS)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Active)
                    </td>
                    <td>
                        @{

                            if (userCanEdit)
                            {

                                using (Html.BeginForm("ActivateUser", "User", FormMethod.Post))
                                {
                                    @Html.Hidden("SearchBadge", ViewBag.SearchBadge as string)
                                    @Html.Hidden("SearchModel", ViewBag.SearchModel as string)
                                    @Html.Hidden("SearchOS", ViewBag.SearchOS as string)
                                    @Html.Hidden("ShowActive", ViewBag.ShowActive as string)
                                    @Html.Hidden("Page", ViewBag.Page as int?)
                                    @Html.Hidden("SortField", ViewBag.SortField as string)
                                    @Html.Hidden("SortDirection", ViewBag.SortDirection as string)
                                    @Html.Hidden("userId", item.UserId)
                                    if (item.Active)
                                    {
                                        @Html.Hidden("activate", false)
                                        <input type="submit" value="Disable" style="background:none; border-width:0; color:blue; text-decoration:underline;" />
                                    }
                                    else
                                    {
                                        @Html.Hidden("activate", true)
                                        <input type="submit" value="Enable" style="background:none; border-width:0; color:blue; text-decoration:underline;" />
                                    }


                                }


                            }

                        }
                    </td>
                </tr>
            }

        </table>

    </div>
</div>

<div class="text-center">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>

<br />

<div class="text-center">@Html.PagedListPager(Model, page => Url.Action("Index", new { ViewBag.SearchName, ViewBag.SearchAddress, ViewBag.SearchCity, ViewBag.SortField, ViewBag.SortDirection, page, ViewBag.ShowActive }))</div>

@section Scripts{
    <script src="~/Scripts/site.js"></script>
    <script>
        $(document).ready(function () {
            initPage({ hasSortTable: true, hasSearchPanels: true });

            const panels = $.cookie();
            for (let panel in panels) {
                if (panels.hasOwnProperty(panel)) {
                    if ($("#" + panel).hasClass('panel-collapse'))
                        $("#" + panel).collapse("show");
                }
            };
        });

    </script>
}