@using ACTransit.RestroomFinder.Web.Models
@using ACTransit.RestroomFinder.Web.Infrastructure;

@model RestroomViewModel

@{
    ViewBag.Title = "Add Restroom Feedback";
}

<h2>Add Restroom Feedback</h2>


@using (Html.BeginForm("Create", "Feedback", FormMethod.Post, new { id = "createFeedbackForm" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.CurrentFeedback.FeedbackId)
    @Html.HiddenFor(model => model.CurrentFeedback.RestroomId)
    @*@Html.HiddenFor(model => model.CurrentFeedback.Badge)*@

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Reported By(Badge)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBox("CurrentFeedback.Badge", Common.Badge, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrentFeedback.Badge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Inspection Passed", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.CurrentFeedback.InspectionPassed, RestroomViewModel.FeedbackNeed, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CurrentFeedback.InspectionPassed)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Feedback", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.CurrentFeedback.FeedbackText, new { @class = "form-control" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Needs Attention", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.CurrentFeedback.NeedsAttention, RestroomViewModel.FeedbackNeed, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CurrentFeedback.NeedsAttention)
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Needs Cleaning", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.CurrentFeedback.NeedsCleaning, RestroomViewModel.FeedbackNeed, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CurrentFeedback.NeedsCleaning)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Needs Repair", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.CurrentFeedback.NeedsRepair, RestroomViewModel.FeedbackNeed, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CurrentFeedback.NeedsRepair)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Needs Supplies", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.CurrentFeedback.NeedsSupply, RestroomViewModel.FeedbackNeed, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CurrentFeedback.NeedsSupply)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Reported Action", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.CurrentFeedback.ReportedAction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentFeedback.ReportedAction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Resolution", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.CurrentFeedback.Resolution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentFeedback.Resolution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

<div>
    <a href="javascript:history.back();">Back to List</a>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {
            if (!("url" in window) && ("webkitURL" in window)) {
                window.URL = window.webkitURL;
            }
        });
    </script>
}