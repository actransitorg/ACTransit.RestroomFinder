@model ACTransit.RestroomFinder.Web.Models.RestroomViewModel

@section Head {
    @Styles.Render("~/Content/magicsuggestcss")
}

@{
    ViewBag.Title = "Create Restroom";
}

<h2>Create Restroom</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Restroom Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.RestroomType, Model.RestrooomTypes, "Select a Restroom Type...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RestroomType, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.Active, Model.Statuses, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.RestroomName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RestroomName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <a type="button" id="ShowMap" class="btn" style="padding-left:0px;" href="#MapContainer" data-toggle="modal">
                        <img src="~/Content/Images/location-icon-48px.png" style="padding: 0; margin: -5px 0 0 -1px; height: 35px; width: 35px;" title="Search On Map" />
                    </a>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("State", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.State, Model.States, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Zip", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Country, "USA", new { htmlAttributes = new { @class = "form-control", @Value = "USA" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Has Drinking Water", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.DrinkingWater, Model.DrinkingWaterOptions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DrinkingWater, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Routes", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ACTRoute, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.ACTRoute, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Restroom Availability", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Note", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Longitude", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.LongDec, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.LongDec, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Latitude", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.LatDec, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.LatDec, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" id="submit"/>
                </div>
            </div>
        </div>
    }

    <div class="modal" id="MapContainer" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Select the desired location on the map</h4>
                </div>
                <div id="restroom-map-canvas" class="google-map modal-body" style="height:500px;"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="UseCurrentLocation">Use Current Location</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="CloseWindow">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/magicsuggest")
        @Scripts.Render("~/bundles/mapviewer")

        <script>

            $(document).ready(function () {

                if (!("url" in window) && ("webkitURL" in window)) {
                    window.URL = window.webkitURL;
                }

                //Set MagicSuggest component
                var selRoutes = $("#ACTRoute").magicSuggest({
                    data: window.location.origin + '/restroomfinder/restroomadmin/getallroutes',
                    maxSelection: null,
                    maxSuggestions: 10,
                    maxEntryLength: 5,
                    valueField: "Item1",
                    displayField: "Item2"
                });

                //Set name to be used during post
                selRoutes.setName("SelectedRoutes");

                $('#MapContainer').on('show.bs.modal', function (e) {

                    if ($('#Address').val() && $('#City').val()) {

                        mapOptions.startAddress = {
                            streetAddress: $('#Address').val().concat(",").concat($('#City').val()).concat(",").concat($('#State').val()).concat(",").concat($('#Zip').val()),
                            lat: $('#LatDec').val(),
                            lng: $('#LongDec').val()
                        };
                    }
                    else {
                        //Use GO location as default
                        mapOptions.startAddress = { streetAddress: '1600 Franklin St, Oakland', lat: 37.80566760423034, lng: -122.26885564694368 };
                    }

                    AcTransitMap.FindMe.start(mapOptions);
                });

                $('#UseCurrentLocation').click(function () {

                    $('#MapContainer').modal('hide');

                    //Parse raw address
                    var address = AcTransitMap.FindMe.info.getContent().split(',');
                    $('#Address').val($.trim(address[0]));
                    $('#City').val($.trim(address[1]));
                    $('#State').val($.trim(address[2]).split(" ")[0]);
                    $('#Zip').val($.trim(address[2]).split(" ")[1]);

                    //Parse coordinates
                    var pos = AcTransitMap.FindMe.marker.getPosition();
                    $('#LatDec').val(pos.lat);
                    $('#LongDec').val(pos.lng);
                });

            });
        </script>
    }
